"""initial migration

Revision ID: 526477012f35
Revises: 
Create Date: 2021-03-06 15:59:42.403997

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '526477012f35'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('contact_num', sa.String(length=30), nullable=True),
    sa.Column('zone', sa.Enum('A', 'B', 'C', 'D', name='zone'), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('role', sa.Enum('SALES_REP', 'SALES_REP_LEAD', name='role'), nullable=True),
    sa.Column('timezone', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_contact_num'), ['contact_num'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('outlet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('zone', sa.Enum('A', 'B', 'C', 'D', name='zone'), nullable=True),
    sa.Column('value', sa.Numeric(precision=5), nullable=True),
    sa.Column('contact_num', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('rep_id', sa.Integer(), nullable=True),
    sa.Column('x', sa.String(length=20), nullable=True),
    sa.Column('y', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['rep_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('outlet', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_outlet_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_outlet_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_outlet_name'), ['name'], unique=False)

    op.create_table('available_time',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('day', sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='day'), nullable=True),
    sa.Column('outlet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['outlet_id'], ['outlet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('type', sa.Enum('CUSTOM', 'MANDATORY', name='tasktype'), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'ASSIGNED', 'EXPIRED', 'COMPLETED', 'SCHEDULED', 'INCOMPLETE', name='taskstatus'), nullable=True),
    sa.Column('service_time', sa.Integer(), nullable=True),
    sa.Column('repeat_count', sa.Integer(), nullable=True),
    sa.Column('completion_count', sa.Integer(), nullable=True),
    sa.Column('outlet_id', sa.Integer(), nullable=True),
    sa.Column('rep_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['outlet_id'], ['outlet.id'], ),
    sa.ForeignKeyConstraint(['rep_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_title'), ['title'], unique=False)

    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=True),
    sa.Column('end', sa.DateTime(), nullable=True),
    sa.Column('rep_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rep_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_week',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'ASSIGNED', 'EXPIRED', 'COMPLETED', 'SCHEDULED', 'INCOMPLETE', name='taskstatus'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('remark',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('rep_id', sa.Integer(), nullable=True),
    sa.Column('taskweek_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rep_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['taskweek_id'], ['task_week.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('remark')
    op.drop_table('task_week')
    op.drop_table('schedule')
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_title'))

    op.drop_table('task')
    op.drop_table('available_time')
    with op.batch_alter_table('outlet', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_outlet_name'))
        batch_op.drop_index(batch_op.f('ix_outlet_location'))
        batch_op.drop_index(batch_op.f('ix_outlet_email'))

    op.drop_table('outlet')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_name'))
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.drop_index(batch_op.f('ix_user_contact_num'))

    op.drop_table('user')
    # ### end Alembic commands ###
